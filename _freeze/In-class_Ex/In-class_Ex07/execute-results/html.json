{
  "hash": "5b80b42b40c173eefbad4448777a9280",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-class Exercise 7\"\nauthor: \"Wong Zi Qi\"\nexecute:\n  warning: false\n  message: false\n  freeze: true\n---\n\n\n\n# 1. Installing packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, tsibble, feasts, fable, seasonal)\n```\n:::\n\n\n\n# 2. Importing data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nts_data <- read.csv(\"../data/visitor_arrivals_by_air.csv\")\n```\n:::\n\n\n\n# 3. Preparing data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nts_data$`Month.Year` <- dmy(\n  ts_data$`Month.Year`)\n```\n:::\n\n\n\n# 4. Conventional base `ts` object vs `tibble` object\n\n::: panel-tabset\n\n# ts\n\n\n::: {.cell}\n\n```{.r .cell-code}\nts_data_ts <- ts(ts_data)\nhead(ts_data_ts)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     Month.Year Republic.of.South.Africa Canada   USA Bangladesh Brunei China\n[1,]      13879                     3680   6972 31155       6786   3729 79599\n[2,]      13910                     1662   6056 27738       6314   3070 82074\n[3,]      13939                     3394   6220 31349       7502   4805 72546\n[4,]      13970                     3337   4764 26376       7333   3096 76112\n[5,]      14000                     2089   4460 26788       7988   3586 64808\n[6,]      14031                     2515   3888 29725       8301   5284 55238\n     Hong.Kong.SAR..China. India Indonesia Japan South.Korea Kuwait Malaysia\n[1,]                 17103 41639     62683 37673       27937    284    31352\n[2,]                 21089 37170     47834 35297       22633    241    35030\n[3,]                 23230 44815     64688 42575       22876    206    37629\n[4,]                 17688 49527     58074 26839       20634    193    37521\n[5,]                 19340 67754     57089 30814       22785    140    38044\n[6,]                 19152 57380     70118 31001       22575    354    40419\n     Myanmar Pakistan Philippines Saudi.Arabia Sri.Lanka Taiwan Thailand\n[1,]    5269     1395       18622          406      5289  13757    18370\n[2,]    4643     1027       21609          591      4767  13921    16400\n[3,]    6218     1635       28464          626      4988  11181    23387\n[4,]    7324     1232       30131          644      7639  11665    24469\n[5,]    5395     1306       30193          470      5125  11436    21935\n[6,]    5542     1996       25800          772      4791  10689    19900\n     United.Arab.Emirates Vietnam Belgium...Luxembourg Finland France Germany\n[1,]                 2652   10315                 1341    1179   6918   11982\n[2,]                 2230   13415                 1449    1207   7876   13256\n[3,]                 3353   14320                 1674    1071   8066   15185\n[4,]                 3245   15413                 1426     768   8312   11604\n[5,]                 2856   14424                 1243     690   7066    9853\n[6,]                 4292   21368                 1255     624   5926    9347\n     Italy Netherlands Spain Switzerland United.Kingdom Australia New.Zealand\n[1,]  2953        4938  1668        4450          41934     71260        7806\n[2,]  2704        4885  1568        4381          44029     45595        4729\n[3,]  2822        5015  2254        5015          49489     53191        6106\n[4,]  3018        4902  1503        5434          35771     56514        7560\n[5,]  2165        4397  1365        4427          24464     57808        9090\n[6,]  2022        4166  1446        3359          22473     63350        9681\n```\n\n\n:::\n:::\n\n\n\n# tibble\n\n\n::: {.cell}\n\n```{.r .cell-code}\nts_tsibble <- ts_data %>%\n  mutate(Month = yearmonth(`Month.Year`)) %>%\n  as_tsibble(index = `Month`)\n\nts_tsibble\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tsibble: 144 x 35 [1M]\n   Month.Year Republic.of.South.Africa Canada   USA Bangladesh Brunei China\n   <date>                        <int>  <int> <int>      <int>  <int> <int>\n 1 2008-01-01                     3680   6972 31155       6786   3729 79599\n 2 2008-02-01                     1662   6056 27738       6314   3070 82074\n 3 2008-03-01                     3394   6220 31349       7502   4805 72546\n 4 2008-04-01                     3337   4764 26376       7333   3096 76112\n 5 2008-05-01                     2089   4460 26788       7988   3586 64808\n 6 2008-06-01                     2515   3888 29725       8301   5284 55238\n 7 2008-07-01                     2919   5313 33183       9004   4070 80747\n 8 2008-08-01                     2471   4519 27427       7913   4183 66625\n 9 2008-09-01                     2492   3421 21588       7549   3160 52649\n10 2008-10-01                     3023   4756 25112       7527   2983 54423\n# ℹ 134 more rows\n# ℹ 28 more variables: Hong.Kong.SAR..China. <int>, India <int>,\n#   Indonesia <int>, Japan <int>, South.Korea <int>, Kuwait <int>,\n#   Malaysia <int>, Myanmar <int>, Pakistan <int>, Philippines <int>,\n#   Saudi.Arabia <int>, Sri.Lanka <int>, Taiwan <int>, Thailand <int>,\n#   United.Arab.Emirates <int>, Vietnam <int>, Belgium...Luxembourg <int>,\n#   Finland <int>, France <int>, Germany <int>, Italy <int>, …\n```\n\n\n:::\n:::\n\n\n:::\n\n# 5. Visualizing time-series data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nts_longer <- ts_data %>%\n  pivot_longer(cols = c(2:34),\n               names_to = \"Country\",\n               values_to = \"Arrivals\")\n```\n:::\n\n\n\n## 5.1 Plotting single time-series\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nts_longer %>%\n  filter(Country == \"Vietnam\") %>%\n  ggplot(aes(x = `Month.Year`, \n             y = Arrivals))+\n  geom_line(size = 0.5)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n## 5.2 Plotting multiple time-series\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = ts_longer, \n       aes(x = `Month.Year`, \n           y = Arrivals))+\n  geom_line(size = 0.5) +\n  facet_wrap(~ Country,\n             ncol = 3,\n             scales = \"free_y\") +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n## 5.3 Visualizing seasonality with Cycle Plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntsibble_longer <- ts_tsibble %>%\n  pivot_longer(cols = c(2:34),\n               names_to = \"Country\",\n               values_to = \"Arrivals\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntsibble_longer %>%\n  filter(Country == \"Vietnam\" |\n         Country == \"Italy\") %>% \n  gg_subseries(Arrivals)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n# 6. Time series decomposition\n\n## 6.1 Single time series decomposition\n\n::: {.panel-tabset group=\"single-dec\"}\n\n# ACF\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntsibble_longer %>%\n  filter(`Country` == \"Vietnam\") %>%\n  ACF(Arrivals) %>% \n  autoplot()\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n# PACF\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntsibble_longer %>%\n  filter(`Country` == \"Vietnam\") %>%\n  PACF(Arrivals) %>% \n  autoplot()\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n:::\n\n\n## 6.2 Multiple time series decompoisition\n\n::: {.panel-tabset group=\"multiple-dec\"}\n\n# ACF\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntsibble_longer %>%\n  filter(`Country` == \"Vietnam\" |\n         `Country` == \"Italy\" |\n         `Country` == \"United Kingdom\" |\n         `Country` == \"China\") %>%\n  ACF(Arrivals) %>%\n  autoplot()\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n\n# PACF\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntsibble_longer %>%\n  filter(`Country` == \"Vietnam\" |\n         `Country` == \"Italy\" |\n         `Country` == \"United Kingdom\" |\n         `Country` == \"China\") %>%\n  PACF(Arrivals) %>%\n  autoplot()\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n# 7. Visual STL diagnostics with feasts\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntsibble_longer %>%\n  filter(`Country` == \"Vietnam\") %>%\n  model(stl = STL(Arrivals)) %>%\n  components() %>%\n  autoplot()\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\n# 8. Visual Forecasting\n\n## 8.1 Time Series Data Sampling\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvietnam_ts <- tsibble_longer %>%\n  filter(Country == \"Vietnam\") %>% \n  mutate(Type = if_else(\n    `Month.Year` >= \"2019-01-01\", \n    \"Hold-out\", \"Training\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nvietnam_train <- vietnam_ts %>%\n  filter(`Month.Year` < \"2019-01-01\")\n```\n:::\n\n\n\n## 8.2 Exploratory Data Analysis (EDA): Time Series Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvietnam_train %>%\n  model(stl = STL(Arrivals)) %>%\n  components() %>%\n  autoplot()\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n\n## 8.3 Fitting forecasting models\n\n### Fitting a simple exponential smoothing (SES)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_ses <- vietnam_train %>%\n  model(ETS(Arrivals ~ error(\"A\") \n            + trend(\"N\") \n            + season(\"N\")))\nfit_ses\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A mable: 1 x 2\n# Key:     Country [1]\n  Country `ETS(Arrivals ~ error(\"A\") + trend(\"N\") + season(\"N\"))`\n  <chr>                                                   <model>\n1 Vietnam                                            <ETS(A,N,N)>\n```\n\n\n:::\n:::\n\n\n\n### Examine Model Assumptions\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngg_tsresiduals(fit_ses)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n\n## 8.4 Fitting multiple ETS Models\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_ETS <- vietnam_train %>%\n  model(`SES` = ETS(Arrivals ~ error(\"A\") + \n                      trend(\"N\") + \n                      season(\"N\")),\n        `Holt`= ETS(Arrivals ~ error(\"A\") +\n                      trend(\"A\") +\n                      season(\"N\")),\n        `damped Holt` = \n          ETS(Arrivals ~ error(\"A\") +\n                trend(\"Ad\") + \n                season(\"N\")),\n        `WH_A` = ETS(\n          Arrivals ~ error(\"A\") + \n            trend(\"A\") + \n            season(\"A\")),\n        `WH_M` = ETS(Arrivals ~ error(\"M\") \n                         + trend(\"A\") \n                         + season(\"M\"))\n  )\n```\n:::\n\n\n\n## 8.5 Forecasting future values\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_ETS %>%\n  forecast(h = \"12 months\") %>%\n  autoplot(vietnam_ts, \n           level = NULL)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "In-class_Ex07_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}